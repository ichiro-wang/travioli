import jwt from "jsonwebtoken";
import { Response } from "express";
import { DecodedToken } from "../middleware/protectRoute.js";

export type tokenType = "refresh" | "access";


const generateToken = (userId: string, isRefreshToken: boolean, res: Response): string => {
  const DAYS = 7;

  // check if the token was generated by authenticating with user credentials, or a refresh token
  const tokenType: tokenType = isRefreshToken ? "refresh" : "access";
  const payload: DecodedToken = { userId, tokenType };

  const token = jwt.sign(payload, process.env.JWT_SECRET!, {
    expiresIn: `${DAYS}d`,
  });

  res.cookie("jwt", token, {
    maxAge: DAYS * 24 * 60 * 60 * 1000,
    httpOnly: true,
    sameSite: "strict",
    secure: process.env.NODE_ENV !== "development",
  });

  return token;
};

export default generateToken;
